{
  "address": "0x3E3530fF60Def946e335dB6c4A990e8762BCbCC9",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "accessControl",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        }
      ],
      "name": "DAOCreated",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "daoImplementation",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "accessControlImplementation",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "salt",
              "type": "bytes32"
            },
            {
              "internalType": "string",
              "name": "daoName",
              "type": "string"
            },
            {
              "internalType": "string[]",
              "name": "roles",
              "type": "string[]"
            },
            {
              "internalType": "string[]",
              "name": "rolesAdmins",
              "type": "string[]"
            },
            {
              "internalType": "address[][]",
              "name": "members",
              "type": "address[][]"
            },
            {
              "internalType": "string[]",
              "name": "daoFunctionDescs",
              "type": "string[]"
            },
            {
              "internalType": "string[][]",
              "name": "daoActionRoles",
              "type": "string[][]"
            }
          ],
          "internalType": "struct IDAOFactory.CreateDAOParams",
          "name": "createDAOParams",
          "type": "tuple"
        }
      ],
      "name": "createDAO",
      "outputs": [
        {
          "internalType": "address",
          "name": "dao",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "accessControl",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "transactionHash": "0xb2ccca061a27b4b29b97e91b25161ea11544636a3ee8a14ecaa973aec091730f",
  "receipt": {
    "to": null,
    "from": "0x04B32DA1E6b0ecd8435b2d1B3F06bC2A6c4db9aE",
    "contractAddress": "0x3E3530fF60Def946e335dB6c4A990e8762BCbCC9",
    "transactionIndex": 0,
    "gasUsed": "1345852",
    "logsBloom": "0x
    "blockHash": "0xd797d5c7b8f0fb7c35abbc9fcf122aaee34e95d32f6a83a865ee7d29a2ee641c",
    "transactionHash": "0xb2ccca061a27b4b29b97e91b25161ea11544636a3ee8a14ecaa973aec091730f",
    "logs": [],
    "blockNumber": 7104843,
    "cumulativeGasUsed": "1345852",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 2,
  "solcInputHash": "1a8db0e49a7967edea6da3a48d3cd68e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"accessControl\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"DAOCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"daoImplementation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessControlImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"salt\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"daoName\",\"type\":\"string\"},{\"internalType\":\"string[]\",\"name\":\"roles\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"rolesAdmins\",\"type\":\"string[]\"},{\"internalType\":\"address[][]\",\"name\":\"members\",\"type\":\"address[][]\"},{\"internalType\":\"string[]\",\"name\":\"daoFunctionDescs\",\"type\":\"string[]\"},{\"internalType\":\"string[][]\",\"name\":\"daoActionRoles\",\"type\":\"string[][]\"}],\"internalType\":\"struct IDAOFactory.CreateDAOParams\",\"name\":\"createDAOParams\",\"type\":\"tuple\"}],\"name\":\"createDAO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"dao\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"accessControl\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createDAO(address,(address,address,bytes32,string,string[],string[],address[][],string[],string[][]))\":{\"params\":{\"createDAOParams\":\"Struct of all the parameters required to create a DAO\",\"creator\":\"Address of the Dao Creator\"},\"returns\":{\"accessControl\":\"The address of the deployed access control proxy contract\",\"dao\":\"The address of the deployed DAO proxy contract\"}},\"supportsInterface(bytes4)\":{\"params\":{\"interfaceId\":\"An interface ID bytes4 as defined by ERC-165\"},\"returns\":{\"_0\":\"bool Indicates whether the interface is supported\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createDAO(address,(address,address,bytes32,string,string[],string[],address[][],string[],string[][]))\":{\"notice\":\"Creates a DAO with an access control contract\"},\"supportsInterface(bytes4)\":{\"notice\":\"Returns whether a given interface ID is supported\"}},\"notice\":\"A factory contract for deploying DAOs with an access control contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DAOFactory.sol\":\"DAOFactory\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (interfaces/draft-IERC1822.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\\n * proxy whose upgrades are fully controlled by the current implementation.\\n */\\ninterface IERC1822Proxiable {\\n    /**\\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\\n     * address.\\n     *\\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\\n     * function revert if invoked through a proxy.\\n     */\\n    function proxiableUUID() external view returns (bytes32);\\n}\\n\",\"keccak256\":\"0x1d4afe6cb24200cc4545eed814ecf5847277dfe5d613a1707aad5fceecebcfff\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/ERC1967/ERC1967Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../Proxy.sol\\\";\\nimport \\\"./ERC1967Upgrade.sol\\\";\\n\\n/**\\n * @dev This contract implements an upgradeable proxy. It is upgradeable because calls are delegated to an\\n * implementation address that can be changed. This address is stored in storage in the location specified by\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967], so that it doesn't conflict with the storage layout of the\\n * implementation behind the proxy.\\n */\\ncontract ERC1967Proxy is Proxy, ERC1967Upgrade {\\n    /**\\n     * @dev Initializes the upgradeable proxy with an initial implementation specified by `_logic`.\\n     *\\n     * If `_data` is nonempty, it's used as data in a delegate call to `_logic`. This will typically be an encoded\\n     * function call, and allows initializating the storage of the proxy like a Solidity constructor.\\n     */\\n    constructor(address _logic, bytes memory _data) payable {\\n        assert(_IMPLEMENTATION_SLOT == bytes32(uint256(keccak256(\\\"eip1967.proxy.implementation\\\")) - 1));\\n        _upgradeToAndCall(_logic, _data, false);\\n    }\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _implementation() internal view virtual override returns (address impl) {\\n        return ERC1967Upgrade._getImplementation();\\n    }\\n}\\n\",\"keccak256\":\"0x6309f9f39dc6f4f45a24f296543867aa358e32946cd6b2874627a996d606b3a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Upgrade.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/ERC1967/ERC1967Upgrade.sol)\\n\\npragma solidity ^0.8.2;\\n\\nimport \\\"../beacon/IBeacon.sol\\\";\\nimport \\\"../../interfaces/draft-IERC1822.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/StorageSlot.sol\\\";\\n\\n/**\\n * @dev This abstract contract provides getters and event emitting update functions for\\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\\n *\\n * _Available since v4.1._\\n *\\n * @custom:oz-upgrades-unsafe-allow delegatecall\\n */\\nabstract contract ERC1967Upgrade {\\n    // This is the keccak-256 hash of \\\"eip1967.proxy.rollback\\\" subtracted by 1\\n    bytes32 private constant _ROLLBACK_SLOT = 0x4910fdfa16fed3260ed0e7147f7cc6da11a60208b5b9406d12a635614ffd9143;\\n\\n    /**\\n     * @dev Storage slot with the address of the current implementation.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n\\n    /**\\n     * @dev Emitted when the implementation is upgraded.\\n     */\\n    event Upgraded(address indexed implementation);\\n\\n    /**\\n     * @dev Returns the current implementation address.\\n     */\\n    function _getImplementation() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 implementation slot.\\n     */\\n    function _setImplementation(address newImplementation) private {\\n        require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n        StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeTo(address newImplementation) internal {\\n        _setImplementation(newImplementation);\\n        emit Upgraded(newImplementation);\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCall(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _upgradeTo(newImplementation);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(newImplementation, data);\\n        }\\n    }\\n\\n    /**\\n     * @dev Perform implementation upgrade with security checks for UUPS proxies, and additional setup call.\\n     *\\n     * Emits an {Upgraded} event.\\n     */\\n    function _upgradeToAndCallUUPS(\\n        address newImplementation,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        // Upgrades from old implementations will perform a rollback test. This test requires the new\\n        // implementation to upgrade back to the old, non-ERC1822 compliant, implementation. Removing\\n        // this special case will break upgrade paths from old UUPS implementation to new ones.\\n        if (StorageSlot.getBooleanSlot(_ROLLBACK_SLOT).value) {\\n            _setImplementation(newImplementation);\\n        } else {\\n            try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\\n                require(slot == _IMPLEMENTATION_SLOT, \\\"ERC1967Upgrade: unsupported proxiableUUID\\\");\\n            } catch {\\n                revert(\\\"ERC1967Upgrade: new implementation is not UUPS\\\");\\n            }\\n            _upgradeToAndCall(newImplementation, data, forceCall);\\n        }\\n    }\\n\\n    /**\\n     * @dev Storage slot with the admin of the contract.\\n     * This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1, and is\\n     * validated in the constructor.\\n     */\\n    bytes32 internal constant _ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\\n\\n    /**\\n     * @dev Emitted when the admin account has changed.\\n     */\\n    event AdminChanged(address previousAdmin, address newAdmin);\\n\\n    /**\\n     * @dev Returns the current admin.\\n     */\\n    function _getAdmin() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_ADMIN_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new address in the EIP1967 admin slot.\\n     */\\n    function _setAdmin(address newAdmin) private {\\n        require(newAdmin != address(0), \\\"ERC1967: new admin is the zero address\\\");\\n        StorageSlot.getAddressSlot(_ADMIN_SLOT).value = newAdmin;\\n    }\\n\\n    /**\\n     * @dev Changes the admin of the proxy.\\n     *\\n     * Emits an {AdminChanged} event.\\n     */\\n    function _changeAdmin(address newAdmin) internal {\\n        emit AdminChanged(_getAdmin(), newAdmin);\\n        _setAdmin(newAdmin);\\n    }\\n\\n    /**\\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\\n     * This is bytes32(uint256(keccak256('eip1967.proxy.beacon')) - 1)) and is validated in the constructor.\\n     */\\n    bytes32 internal constant _BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\\n\\n    /**\\n     * @dev Emitted when the beacon is upgraded.\\n     */\\n    event BeaconUpgraded(address indexed beacon);\\n\\n    /**\\n     * @dev Returns the current beacon.\\n     */\\n    function _getBeacon() internal view returns (address) {\\n        return StorageSlot.getAddressSlot(_BEACON_SLOT).value;\\n    }\\n\\n    /**\\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\\n     */\\n    function _setBeacon(address newBeacon) private {\\n        require(Address.isContract(newBeacon), \\\"ERC1967: new beacon is not a contract\\\");\\n        require(\\n            Address.isContract(IBeacon(newBeacon).implementation()),\\n            \\\"ERC1967: beacon implementation is not a contract\\\"\\n        );\\n        StorageSlot.getAddressSlot(_BEACON_SLOT).value = newBeacon;\\n    }\\n\\n    /**\\n     * @dev Perform beacon upgrade with additional setup call. Note: This upgrades the address of the beacon, it does\\n     * not upgrade the implementation contained in the beacon (see {UpgradeableBeacon-_setImplementation} for that).\\n     *\\n     * Emits a {BeaconUpgraded} event.\\n     */\\n    function _upgradeBeaconToAndCall(\\n        address newBeacon,\\n        bytes memory data,\\n        bool forceCall\\n    ) internal {\\n        _setBeacon(newBeacon);\\n        emit BeaconUpgraded(newBeacon);\\n        if (data.length > 0 || forceCall) {\\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xabf3f59bc0e5423eae45e459dbe92e7052c6983628d39008590edc852a62f94a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/Proxy.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (proxy/Proxy.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This abstract contract provides a fallback function that delegates all calls to another contract using the EVM\\n * instruction `delegatecall`. We refer to the second contract as the _implementation_ behind the proxy, and it has to\\n * be specified by overriding the virtual {_implementation} function.\\n *\\n * Additionally, delegation to the implementation can be triggered manually through the {_fallback} function, or to a\\n * different contract through the {_delegate} function.\\n *\\n * The success and return data of the delegated call will be returned back to the caller of the proxy.\\n */\\nabstract contract Proxy {\\n    /**\\n     * @dev Delegates the current call to `implementation`.\\n     *\\n     * This function does not return to its internal call site, it will return directly to the external caller.\\n     */\\n    function _delegate(address implementation) internal virtual {\\n        assembly {\\n            // Copy msg.data. We take full control of memory in this inline assembly\\n            // block because it will not return to Solidity code. We overwrite the\\n            // Solidity scratch pad at memory position 0.\\n            calldatacopy(0, 0, calldatasize())\\n\\n            // Call the implementation.\\n            // out and outsize are 0 because we don't know the size yet.\\n            let result := delegatecall(gas(), implementation, 0, calldatasize(), 0, 0)\\n\\n            // Copy the returned data.\\n            returndatacopy(0, 0, returndatasize())\\n\\n            switch result\\n            // delegatecall returns 0 on error.\\n            case 0 {\\n                revert(0, returndatasize())\\n            }\\n            default {\\n                return(0, returndatasize())\\n            }\\n        }\\n    }\\n\\n    /**\\n     * @dev This is a virtual function that should be overriden so it returns the address to which the fallback function\\n     * and {_fallback} should delegate.\\n     */\\n    function _implementation() internal view virtual returns (address);\\n\\n    /**\\n     * @dev Delegates the current call to the address returned by `_implementation()`.\\n     *\\n     * This function does not return to its internall call site, it will return directly to the external caller.\\n     */\\n    function _fallback() internal virtual {\\n        _beforeFallback();\\n        _delegate(_implementation());\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if no other\\n     * function in the contract matches the call data.\\n     */\\n    fallback() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Fallback function that delegates calls to the address returned by `_implementation()`. Will run if call data\\n     * is empty.\\n     */\\n    receive() external payable virtual {\\n        _fallback();\\n    }\\n\\n    /**\\n     * @dev Hook that is called before falling back to the implementation. Can happen as part of a manual `_fallback`\\n     * call, or as part of the Solidity `fallback` or `receive` functions.\\n     *\\n     * If overriden should call `super._beforeFallback()`.\\n     */\\n    function _beforeFallback() internal virtual {}\\n}\\n\",\"keccak256\":\"0x0edeb16b9821ae2b16e9d69c383b38d3ad2fbb3e0c06cf809a0786d96e602551\",\"license\":\"MIT\"},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (proxy/beacon/IBeacon.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\\n */\\ninterface IBeacon {\\n    /**\\n     * @dev Must return an address that can be used as a delegate call target.\\n     *\\n     * {BeaconProxy} will check that this address is a contract.\\n     */\\n    function implementation() external view returns (address);\\n}\\n\",\"keccak256\":\"0xd50a3421ac379ccb1be435fa646d66a65c986b4924f0849839f08692f39dde61\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/Address.sol)\\n\\npragma solidity ^0.8.1;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\\n     *\\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\\n     * constructor.\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize/address.code.length, which returns 0\\n        // for contracts in construction, since the code is only stored at the end\\n        // of the constructor execution.\\n\\n        return account.code.length > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x2ccf9d2313a313d41a791505f2b5abfdc62191b5d4334f7f7a82691c088a1c87\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Create2.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Create2.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Helper to make usage of the `CREATE2` EVM opcode easier and safer.\\n * `CREATE2` can be used to compute in advance the address where a smart\\n * contract will be deployed, which allows for interesting new mechanisms known\\n * as 'counterfactual interactions'.\\n *\\n * See the https://eips.ethereum.org/EIPS/eip-1014#motivation[EIP] for more\\n * information.\\n */\\nlibrary Create2 {\\n    /**\\n     * @dev Deploys a contract using `CREATE2`. The address where the contract\\n     * will be deployed can be known in advance via {computeAddress}.\\n     *\\n     * The bytecode for a contract can be obtained from Solidity with\\n     * `type(contractName).creationCode`.\\n     *\\n     * Requirements:\\n     *\\n     * - `bytecode` must not be empty.\\n     * - `salt` must have not been used for `bytecode` already.\\n     * - the factory must have a balance of at least `amount`.\\n     * - if `amount` is non-zero, `bytecode` must have a `payable` constructor.\\n     */\\n    function deploy(\\n        uint256 amount,\\n        bytes32 salt,\\n        bytes memory bytecode\\n    ) internal returns (address) {\\n        address addr;\\n        require(address(this).balance >= amount, \\\"Create2: insufficient balance\\\");\\n        require(bytecode.length != 0, \\\"Create2: bytecode length is zero\\\");\\n        assembly {\\n            addr := create2(amount, add(bytecode, 0x20), mload(bytecode), salt)\\n        }\\n        require(addr != address(0), \\\"Create2: Failed on deploy\\\");\\n        return addr;\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy}. Any change in the\\n     * `bytecodeHash` or `salt` will result in a new destination address.\\n     */\\n    function computeAddress(bytes32 salt, bytes32 bytecodeHash) internal view returns (address) {\\n        return computeAddress(salt, bytecodeHash, address(this));\\n    }\\n\\n    /**\\n     * @dev Returns the address where a contract will be stored if deployed via {deploy} from a contract located at\\n     * `deployer`. If `deployer` is this contract's address, returns the same value as {computeAddress}.\\n     */\\n    function computeAddress(\\n        bytes32 salt,\\n        bytes32 bytecodeHash,\\n        address deployer\\n    ) internal pure returns (address) {\\n        bytes32 _data = keccak256(abi.encodePacked(bytes1(0xff), deployer, salt, bytecodeHash));\\n        return address(uint160(uint256(_data)));\\n    }\\n}\\n\",\"keccak256\":\"0xebe3f8a59f0f1c96344a05edb984ef666ee4207e993cca99af3808f1de8771b5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/StorageSlot.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Library for reading and writing primitive types to specific storage slots.\\n *\\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\\n * This library helps with reading and writing to such slots without the need for inline assembly.\\n *\\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\\n *\\n * Example usage to set ERC1967 implementation slot:\\n * ```\\n * contract ERC1967 {\\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\\n *\\n *     function _getImplementation() internal view returns (address) {\\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\\n *     }\\n *\\n *     function _setImplementation(address newImplementation) internal {\\n *         require(Address.isContract(newImplementation), \\\"ERC1967: new implementation is not a contract\\\");\\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\\n *     }\\n * }\\n * ```\\n *\\n * _Available since v4.1 for `address`, `bool`, `bytes32`, and `uint256`._\\n */\\nlibrary StorageSlot {\\n    struct AddressSlot {\\n        address value;\\n    }\\n\\n    struct BooleanSlot {\\n        bool value;\\n    }\\n\\n    struct Bytes32Slot {\\n        bytes32 value;\\n    }\\n\\n    struct Uint256Slot {\\n        uint256 value;\\n    }\\n\\n    /**\\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\\n     */\\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\\n     */\\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\\n     */\\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\\n     */\\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\\n        assembly {\\n            r.slot := slot\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xfe1b7a9aa2a530a9e705b220e26cd584e2fbdc9602a3a1066032b12816b46aca\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\"},\"contracts/DAOFactory.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/utils/introspection/ERC165.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Proxy.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/utils/Create2.sol\\\";\\r\\n\\r\\nimport \\\"./interfaces/IDAOFactory.sol\\\";\\r\\nimport \\\"./interfaces/IDAOAccessControl.sol\\\";\\r\\nimport \\\"./interfaces/IDAO.sol\\\";\\r\\n\\r\\n/// @notice A factory contract for deploying DAOs with an access control contract\\r\\ncontract DAOFactory is IDAOFactory, ERC165 {\\r\\n    /// @notice Creates a DAO with an access control contract\\r\\n    /// @param creator Address of the Dao Creator\\r\\n    /// @param createDAOParams Struct of all the parameters required to create a DAO\\r\\n    /// @return dao The address of the deployed DAO proxy contract\\r\\n    /// @return accessControl The address of the deployed access control proxy contract\\r\\n    function createDAO(\\r\\n        address creator,\\r\\n        CreateDAOParams calldata createDAOParams\\r\\n    ) external returns (address dao, address accessControl) {\\r\\n        dao = _createDAO(createDAOParams);\\r\\n        accessControl = _createAccessControl(createDAOParams);\\r\\n\\r\\n        address[] memory targets = new address[](\\r\\n            createDAOParams.daoFunctionDescs.length\\r\\n        );\\r\\n\\r\\n        for (uint256 i; i < createDAOParams.daoFunctionDescs.length; ) {\\r\\n            targets[i] = dao;\\r\\n            unchecked {\\r\\n                i++;\\r\\n            }\\r\\n        }\\r\\n\\r\\n        IDAO(dao).initialize(\\r\\n            accessControl,\\r\\n            address(this),\\r\\n            createDAOParams.daoName\\r\\n        );\\r\\n        IDAOAccessControl(accessControl).initialize(\\r\\n            dao,\\r\\n            createDAOParams.roles,\\r\\n            createDAOParams.rolesAdmins,\\r\\n            createDAOParams.members,\\r\\n            targets,\\r\\n            createDAOParams.daoFunctionDescs,\\r\\n            createDAOParams.daoActionRoles\\r\\n        );\\r\\n\\r\\n        emit DAOCreated(dao, accessControl, msg.sender, creator);\\r\\n    }\\r\\n\\r\\n    function _createDAO(CreateDAOParams calldata createDAOParams)\\r\\n        internal\\r\\n        returns (address _dao)\\r\\n    {\\r\\n        _dao = Create2.deploy(\\r\\n            0,\\r\\n            keccak256(abi.encodePacked(tx.origin, block.chainid, createDAOParams.salt)),\\r\\n            abi.encodePacked(\\r\\n                type(ERC1967Proxy).creationCode,\\r\\n                abi.encode(createDAOParams.daoImplementation, \\\"\\\")\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _createAccessControl(CreateDAOParams memory createDAOParams)\\r\\n        private\\r\\n        returns (address _accessControl)\\r\\n    {\\r\\n        _accessControl = Create2.deploy(\\r\\n            0,\\r\\n            keccak256(abi.encodePacked(tx.origin, block.chainid, createDAOParams.salt)),\\r\\n            abi.encodePacked(\\r\\n                type(ERC1967Proxy).creationCode,\\r\\n                abi.encode(createDAOParams.accessControlImplementation, \\\"\\\")\\r\\n            )\\r\\n        );\\r\\n    }\\r\\n\\r\\n    /// @notice Returns whether a given interface ID is supported\\r\\n    /// @param interfaceId An interface ID bytes4 as defined by ERC-165\\r\\n    /// @return bool Indicates whether the interface is supported\\r\\n    function supportsInterface(bytes4 interfaceId)\\r\\n        public\\r\\n        view\\r\\n        virtual\\r\\n        override\\r\\n        returns (bool)\\r\\n    {\\r\\n        return\\r\\n            interfaceId == type(IDAOFactory).interfaceId ||\\r\\n            super.supportsInterface(interfaceId);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x2d2f2d528e4ab2c537ed261f7407c6ffb24ac843bd18bf1d4d6748928e73c8c9\",\"license\":\"Unlicense\"},\"contracts/interfaces/IDAO.sol\":{\"content\":\"import \\\"./IModuleBase.sol\\\";\\r\\n\\r\\n//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IDAO {\\r\\n    error Unauthorized(bytes32 role, address account);\\r\\n    error UnequalArrayLengths();\\r\\n\\r\\n    event Executed(address[] targets, uint256[] values, bytes[] calldatas);\\r\\n\\r\\n    /// @notice Function for initializing the Dao\\r\\n    /// @param _accessControl The address of the access control contract\\r\\n    /// @param _moduleFactory The address of the module factory\\r\\n    /// @param _name Name of the Dao\\r\\n    function initialize(address _accessControl, address _moduleFactory, string calldata _name) external;\\r\\n\\r\\n    /// @notice A function for executing function calls from the DAO\\r\\n    /// @param targets An array of addresses to target for the function calls\\r\\n    /// @param values An array of ether values to send with the function calls\\r\\n    /// @param calldatas An array of bytes defining the function calls\\r\\n    function execute(\\r\\n        address[] calldata targets,\\r\\n        uint256[] calldata values,\\r\\n        bytes[] calldata calldatas\\r\\n    ) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x016f9ae3dc444dfebc90dcd606aac7d4fc72c1766c584ef91552990563a016fc\",\"license\":\"Unlicense\"},\"contracts/interfaces/IDAOAccessControl.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IDAOAccessControl {\\r\\n    struct RoleData {\\r\\n        mapping(address => bool) members;\\r\\n        string adminRole;\\r\\n    }\\r\\n\\r\\n    error UnequalArrayLengths();\\r\\n    error MissingRole(address account, string role);\\r\\n    error OnlySelfRenounce();\\r\\n\\r\\n    event ActionRoleAdded(\\r\\n        address target,\\r\\n        string functionDesc,\\r\\n        bytes4 encodedSig,\\r\\n        string role\\r\\n    );\\r\\n    event ActionRoleRemoved(\\r\\n        address target,\\r\\n        string functionDesc,\\r\\n        bytes4 encodedSig,\\r\\n        string role\\r\\n    );\\r\\n    event RoleAdminChanged(\\r\\n        string role,\\r\\n        string previousAdminRole,\\r\\n        string adminRole\\r\\n    );\\r\\n    event RoleGranted(string role, address account, address admin);\\r\\n    event RoleRevoked(string role, address account, address admin);\\r\\n\\r\\n    /// @notice Initialize DAO action and role permissions\\r\\n    /// @param dao Address to receive DAO role\\r\\n    /// @param roles What permissions are assigned to\\r\\n    /// @param roleAdmins Roles which have the ability to remove or add members\\r\\n    /// @param members Addresses to be granted the specified roles\\r\\n    /// @param targets Contract addresses for actions to be defined on\\r\\n    /// @param functionDescs Function descriptions used to define actions\\r\\n    /// @param actionRoles Roles being granted permission for an action\\r\\n    function initialize(\\r\\n        address dao,\\r\\n        string[] memory roles,\\r\\n        string[] memory roleAdmins,\\r\\n        address[][] memory members,\\r\\n        address[] memory targets,\\r\\n        string[] memory functionDescs,\\r\\n        string[][] memory actionRoles\\r\\n    ) external;\\r\\n\\r\\n    /// @notice Grants roles to the specified addresses and defines admin roles\\r\\n    /// @notice This function can only be called by the DAO\\r\\n    /// @param roles The roles being granted\\r\\n    /// @param roleAdmins The roles being granted as admins of the specified of roles\\r\\n    /// @param members Addresses being granted each specified role\\r\\n    function daoGrantRolesAndAdmins(\\r\\n        string[] memory roles,\\r\\n        string[] memory roleAdmins,\\r\\n        address[][] memory members\\r\\n    ) external;\\r\\n\\r\\n    /// @notice Grants roles to the specified addresses\\r\\n    /// @notice This function can only be called by the DAO\\r\\n    /// @param roles The roles being granted\\r\\n    /// @param members Addresses being granted each specified role\\r\\n    function daoGrantRoles(string[] memory roles, address[][] memory members)\\r\\n        external;\\r\\n\\r\\n    /// @notice Authorizes roles to execute the specified actions\\r\\n    /// @notice This function can only be called by the DAO\\r\\n    /// @param targets The contract addresses that the action functions are implemented on\\r\\n    /// @param functionDescs The function descriptions used to define the actions\\r\\n    /// @param roles Roles being granted permission for an action\\r\\n    function daoAddActionsRoles(\\r\\n        address[] memory targets,\\r\\n        string[] memory functionDescs,\\r\\n        string[][] memory roles\\r\\n    ) external;\\r\\n\\r\\n    /// @notice Removes autorization for roles to execute the specified actions\\r\\n    /// @notice This function can only be called by the DAO\\r\\n    /// @param targets The contract addresses that the action functions are implemented on\\r\\n    /// @param functionDescs The function description used to define the actions\\r\\n    /// @param roles Roles that action permissions are being removed on\\r\\n    function daoRemoveActionsRoles(\\r\\n        address[] memory targets,\\r\\n        string[] memory functionDescs,\\r\\n        string[][] memory roles\\r\\n    ) external;\\r\\n\\r\\n    /// @notice Grants a role to the specified address\\r\\n    /// @notice This function can only be called by an admin of the specified role\\r\\n    /// @param role The role being granted\\r\\n    /// @param account The address being granted the specified role\\r\\n    function adminGrantRole(string memory role, address account)\\r\\n        external;\\r\\n\\r\\n    /// @notice Revokes a role from the specified address\\r\\n    /// @notice This function can only be called by an admin of the specified role\\r\\n    /// @param role The role being revoked\\r\\n    /// @param account The address the role is being revoked from\\r\\n    function adminRevokeRole(string memory role, address account)\\r\\n        external;\\r\\n\\r\\n    /// @notice Enables an address to remove one of its own roles\\r\\n    /// @notice This function can only be called by the account specified\\r\\n    /// @param role The role being renounced\\r\\n    /// @param account The address renouncing the role\\r\\n    function userRenounceRole(string memory role, address account) external;\\r\\n\\r\\n    /// @notice Checks if a caller has the permissions to execute the specific action\\r\\n    /// @param caller Address attempting to execute the action\\r\\n    /// @param target Contract address corresponding to the action\\r\\n    /// @param sig The function signature used to define the action\\r\\n    function actionIsAuthorized(\\r\\n        address caller,\\r\\n        address target,\\r\\n        bytes4 sig\\r\\n    ) external view returns (bool isAuthorized);\\r\\n\\r\\n    /// @notice Returns the roles autorized to execute the specified action\\r\\n    /// @param target Contract address corresponding to the action\\r\\n    /// @param functionDesc The function description used to define the action\\r\\n    function getActionRoles(address target, string memory functionDesc)\\r\\n        external\\r\\n        view\\r\\n        returns (string[] memory roles);\\r\\n\\r\\n    /// @notice Checks if a specific role is authorized for an action\\r\\n    /// @param role Role that authorization is being checked on\\r\\n    /// @param target Contract address corresponding to the action\\r\\n    /// @param functionDesc Function description used to define the action\\r\\n    /// @return isAuthorized Indicates whether the role is authorized to execute the action\\r\\n    function isRoleAuthorized(\\r\\n        string calldata role,\\r\\n        address target,\\r\\n        string memory functionDesc\\r\\n    ) external view returns (bool isAuthorized);\\r\\n\\r\\n    /// @notice Returns whether the account has been granted the role\\r\\n    /// @param role Role that authorization is being checked on\\r\\n    /// @param account Address that the role authorization is being check on\\r\\n    /// @return boolean Indicates whether the address has been granted the role\\r\\n    function hasRole(string memory role, address account)\\r\\n        external\\r\\n        view\\r\\n        returns (bool);\\r\\n\\r\\n    /// @notice Returns the role that is the admin of the specified role\\r\\n    /// @param role Role that the admin role is being returned for\\r\\n    /// @return string The admin role of the specified role\\r\\n    function getRoleAdmin(string memory role)\\r\\n        external\\r\\n        view\\r\\n        returns (string memory);\\r\\n\\r\\n    /// @return string The string \\\"DAO_ROLE\\\"\\r\\n    function DAO_ROLE() external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x8862f578b4fe6a79370b5cbe896e59df4722e95dbb1b0d2e286e335915ed616c\",\"license\":\"Unlicense\"},\"contracts/interfaces/IDAOFactory.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IDAOFactory {\\r\\n    struct CreateDAOParams {\\r\\n        address daoImplementation;\\r\\n        address accessControlImplementation;\\r\\n        bytes32 salt;\\r\\n        string daoName;\\r\\n        string[] roles;\\r\\n        string[] rolesAdmins;\\r\\n        address[][] members;\\r\\n        string[] daoFunctionDescs;\\r\\n        string[][] daoActionRoles;\\r\\n    }\\r\\n\\r\\n    event DAOCreated(address indexed daoAddress, address indexed accessControl, address indexed sender, address creator);\\r\\n\\r\\n    /// @notice Creates a DAO with an access control contract\\r\\n    /// @param creator Address of the Dao Creator\\r\\n    /// @param createDAOParams Struct of all the parameters required to create a DAO\\r\\n    /// @return dao The address of the deployed DAO proxy contract\\r\\n    /// @return accessControl The address of the deployed access control proxy contract\\r\\n    function createDAO(address creator, CreateDAOParams calldata createDAOParams)\\r\\n        external\\r\\n        returns (address, address);\\r\\n}\\r\\n\",\"keccak256\":\"0x5e71fcec37fb9b7a4b34776419df1489d3d5a04e9981c1daa7960931042c2216\",\"license\":\"Unlicense\"},\"contracts/interfaces/IModuleBase.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./IDAOAccessControl.sol\\\";\\r\\n\\r\\ninterface IModuleBase {\\r\\n    error NotAuthorized();\\r\\n\\r\\n    /// @return IDAOAccessControl The Access control interface\\r\\n    function accessControl() external view returns (IDAOAccessControl);\\r\\n\\r\\n    /// @notice Returns whether a given interface ID is supported\\r\\n    /// @param interfaceId An interface ID bytes4 as defined by ERC-165\\r\\n    /// @return bool Indicates whether the interface is supported\\r\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\r\\n\\r\\n    /// @return string The string \\\"Name\\\"\\r\\n    function name() external view returns (string memory);\\r\\n}\\r\\n\",\"keccak256\":\"0x92e9bb20413196a9b8248ac3aa196052410950cbfb9c07080796b3fc786efb7c\",\"license\":\"Unlicense\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611771806100206000396000f3fe60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806301ffc9a7146200003f5780635e13cf2b146200006b575b600080fd5b6200005662000050366004620005cf565b620000a3565b60405190151581526020015b60405180910390f35b620000826200007c3660046200061f565b620000db565b604080516001600160a01b0393841681529290911660208301520162000062565b60006001600160e01b03198216635e13cf2b60e01b1480620000d557506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080620000e98362000331565b915062000100620000fa84620009a5565b6200040b565b905060006200011360e085018562000af0565b90506001600160401b038111156200012f576200012f62000679565b60405190808252806020026020018201604052801562000159578160200160208202803683370190505b50905060005b6200016e60e086018662000af0565b9050811015620001af57838282815181106200018e576200018e62000b43565b6001600160a01b03909216602092830291909101909101526001016200015f565b506001600160a01b038316634571e3a68330620001d0606089018962000b59565b6040518563ffffffff1660e01b8152600401620001f1949392919062000bcb565b600060405180830381600087803b1580156200020c57600080fd5b505af115801562000221573d6000803e3d6000fd5b5050506001600160a01b038316905063f9d68d8a8462000245608088018862000af0565b6200025460a08a018a62000af0565b6200026360c08c018c62000af0565b896200027360e08f018f62000af0565b8f80610100019062000286919062000af0565b6040518d63ffffffff1660e01b8152600401620002af9c9b9a9998979695949392919062000ded565b600060405180830381600087803b158015620002ca57600080fd5b505af1158015620002df573d6000803e3d6000fd5b50506040516001600160a01b03888116825233935085811692508616907f4db6ee38117e611315b34948f609eed3356f7c79be1c2e94a2a636a7e9599cf79060200160405180910390a4509250929050565b604080516bffffffffffffffffffffffff193260601b166020820152466034820152908201356054820152600090620000d590829060740160405160208183030381529060405280519060200120604051806020016200039190620005c1565b601f1982820381018352601f90910116604052620003b3602087018762000f15565b604080516001600160a01b03909216602083015281810152600060608201526080015b60408051601f1981840301815290829052620003f6929160200162000f71565b604051602081830303815290604052620004aa565b60408082015190516bffffffffffffffffffffffff193260601b1660208201524660348201526054810191909152600090620000d590829060740160405160208183030381529060405280519060200120604051806020016200046e90620005c1565b601f1982820381018352601f9091011660408181526020888101516001600160a01b0316908301528082015260006060820152608001620003d6565b60008084471015620005035760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b8251600003620005565760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620004fa565b8383516020850187f590506001600160a01b038116620005b95760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401620004fa565b949350505050565b6107b18062000f8b83390190565b600060208284031215620005e257600080fd5b81356001600160e01b031981168114620005fb57600080fd5b9392505050565b80356001600160a01b03811681146200061a57600080fd5b919050565b600080604083850312156200063357600080fd5b6200063e8362000602565b915060208301356001600160401b038111156200065a57600080fd5b830161012081860312156200066e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620006b557620006b562000679565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620006e657620006e662000679565b604052919050565b600082601f8301126200070057600080fd5b81356001600160401b038111156200071c576200071c62000679565b62000731601f8201601f1916602001620006bb565b8181528460208386010111156200074757600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b0382111562000780576200078062000679565b5060051b60200190565b600082601f8301126200079c57600080fd5b81356020620007b5620007af8362000764565b620006bb565b82815260059290921b84018101918181019086841115620007d557600080fd5b8286015b84811015620008195780356001600160401b03811115620007fa5760008081fd5b6200080a8986838b0101620006ee565b845250918301918301620007d9565b509695505050505050565b600082601f8301126200083657600080fd5b8135602062000849620007af8362000764565b828152600592831b85018201928282019190878511156200086957600080fd5b8387015b858110156200090f5780356001600160401b038111156200088e5760008081fd5b8801603f81018a13620008a15760008081fd5b858101356040620008b6620007af8362000764565b82815291851b8301810191888101908d841115620008d45760008081fd5b938201935b83851015620008fd57620008ed8562000602565b82529389019390890190620008d9565b8852505050938501935084016200086d565b5090979650505050505050565b600082601f8301126200092e57600080fd5b8135602062000941620007af8362000764565b82815260059290921b840181019181810190868411156200096157600080fd5b8286015b84811015620008195780356001600160401b03811115620009865760008081fd5b620009968986838b01016200078a565b84525091830191830162000965565b60006101208236031215620009b957600080fd5b620009c36200068f565b620009ce8362000602565b8152620009de6020840162000602565b60208201526040830135604082015260608301356001600160401b038082111562000a0857600080fd5b62000a1636838701620006ee565b6060840152608085013591508082111562000a3057600080fd5b62000a3e368387016200078a565b608084015260a085013591508082111562000a5857600080fd5b62000a66368387016200078a565b60a084015260c085013591508082111562000a8057600080fd5b62000a8e3683870162000824565b60c084015260e085013591508082111562000aa857600080fd5b62000ab6368387016200078a565b60e08401526101009150818501358181111562000ad257600080fd5b62000ae0368288016200091c565b8385015250505080915050919050565b6000808335601e1984360301811262000b0857600080fd5b8301803591506001600160401b0382111562000b2357600080fd5b6020019150600581901b360382131562000b3c57600080fd5b9250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811262000b7157600080fd5b8301803591506001600160401b0382111562000b8c57600080fd5b60200191503681900382131562000b3c57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0385811682528416602082015260606040820181905260009062000bfa908301848662000ba2565b9695505050505050565b6000808335601e1984360301811262000c1c57600080fd5b83016020810192503590506001600160401b0381111562000c3c57600080fd5b80360383131562000b3c57600080fd5b81835260006020808501808196508560051b810191508460005b8781101562000ca257828403895262000c80828862000c04565b62000c8d86828462000ba2565b9a87019a955050509084019060010162000c66565b5091979650505050505050565b6000808335601e1984360301811262000cc757600080fd5b83016020810192503590506001600160401b0381111562000ce757600080fd5b8060051b360383131562000b3c57600080fd5b600081518084526020808501945080840160005b8381101562000d355781516001600160a01b03168752958201959082019060010162000d0e565b509495945050505050565b81835260006020808501808196506005915085821b8101856000805b8981101562000dde578484038b5262000d76838a62000caf565b80865288860181891b87018a0183865b8481101562000dc657898303601f1901845262000da4828762000c04565b62000db185828462000ba2565b958f019594505050908c019060010162000d86565b50509d8a019d96505050928701925060010162000d5c565b50919998505050505050505050565b6001600160a01b038d16815260e06020820181905260009062000e149083018d8f62000c4c565b828103604084015262000e29818c8e62000c4c565b8381036060850152898152905060208082019060058b901b8301018b60005b8c81101562000ebc57848303601f1901845262000e66828f62000caf565b8085526020850160005b8281101562000ea2576001600160a01b0362000e8c8562000602565b1682526020938401939091019060010162000e70565b506020968701969095509390930192505060010162000e48565b5050848103608086015262000ed2818b62000cfa565b9250505082810360a084015262000eeb81878962000c4c565b905082810360c084015262000f0281858762000d40565b9f9e505050505050505050505050505050565b60006020828403121562000f2857600080fd5b620005fb8262000602565b6000815160005b8181101562000f56576020818501810151868301520162000f3a565b8181111562000f66576000828601525b509290920192915050565b6000620005b962000f83838662000f33565b8462000f3356fe60806040526040516107b13803806107b183398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b60008051602061076a833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610117838360405180606001604052806027815260200161078a602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061076a83398151915260001b6102cb60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b6102ba806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c1396a395593415293023c3bc166734d52c4ee9136c6ff8eaef33568949ec5f064736f6c634300080d0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206faf0c087d2e2ee81882669c404812c2d5ea5b14bfaae671e031a8bedfb484ea64736f6c634300080d0033",
  "deployedBytecode": "0x60806040523480156200001157600080fd5b50600436106200003a5760003560e01c806301ffc9a7146200003f5780635e13cf2b146200006b575b600080fd5b6200005662000050366004620005cf565b620000a3565b60405190151581526020015b60405180910390f35b620000826200007c3660046200061f565b620000db565b604080516001600160a01b0393841681529290911660208301520162000062565b60006001600160e01b03198216635e13cf2b60e01b1480620000d557506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080620000e98362000331565b915062000100620000fa84620009a5565b6200040b565b905060006200011360e085018562000af0565b90506001600160401b038111156200012f576200012f62000679565b60405190808252806020026020018201604052801562000159578160200160208202803683370190505b50905060005b6200016e60e086018662000af0565b9050811015620001af57838282815181106200018e576200018e62000b43565b6001600160a01b03909216602092830291909101909101526001016200015f565b506001600160a01b038316634571e3a68330620001d0606089018962000b59565b6040518563ffffffff1660e01b8152600401620001f1949392919062000bcb565b600060405180830381600087803b1580156200020c57600080fd5b505af115801562000221573d6000803e3d6000fd5b5050506001600160a01b038316905063f9d68d8a8462000245608088018862000af0565b6200025460a08a018a62000af0565b6200026360c08c018c62000af0565b896200027360e08f018f62000af0565b8f80610100019062000286919062000af0565b6040518d63ffffffff1660e01b8152600401620002af9c9b9a9998979695949392919062000ded565b600060405180830381600087803b158015620002ca57600080fd5b505af1158015620002df573d6000803e3d6000fd5b50506040516001600160a01b03888116825233935085811692508616907f4db6ee38117e611315b34948f609eed3356f7c79be1c2e94a2a636a7e9599cf79060200160405180910390a4509250929050565b604080516bffffffffffffffffffffffff193260601b166020820152466034820152908201356054820152600090620000d590829060740160405160208183030381529060405280519060200120604051806020016200039190620005c1565b601f1982820381018352601f90910116604052620003b3602087018762000f15565b604080516001600160a01b03909216602083015281810152600060608201526080015b60408051601f1981840301815290829052620003f6929160200162000f71565b604051602081830303815290604052620004aa565b60408082015190516bffffffffffffffffffffffff193260601b1660208201524660348201526054810191909152600090620000d590829060740160405160208183030381529060405280519060200120604051806020016200046e90620005c1565b601f1982820381018352601f9091011660408181526020888101516001600160a01b0316908301528082015260006060820152608001620003d6565b60008084471015620005035760405162461bcd60e51b815260206004820152601d60248201527f437265617465323a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b8251600003620005565760405162461bcd60e51b815260206004820181905260248201527f437265617465323a2062797465636f6465206c656e677468206973207a65726f6044820152606401620004fa565b8383516020850187f590506001600160a01b038116620005b95760405162461bcd60e51b815260206004820152601960248201527f437265617465323a204661696c6564206f6e206465706c6f79000000000000006044820152606401620004fa565b949350505050565b6107b18062000f8b83390190565b600060208284031215620005e257600080fd5b81356001600160e01b031981168114620005fb57600080fd5b9392505050565b80356001600160a01b03811681146200061a57600080fd5b919050565b600080604083850312156200063357600080fd5b6200063e8362000602565b915060208301356001600160401b038111156200065a57600080fd5b830161012081860312156200066e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60405161012081016001600160401b0381118282101715620006b557620006b562000679565b60405290565b604051601f8201601f191681016001600160401b0381118282101715620006e657620006e662000679565b604052919050565b600082601f8301126200070057600080fd5b81356001600160401b038111156200071c576200071c62000679565b62000731601f8201601f1916602001620006bb565b8181528460208386010111156200074757600080fd5b816020850160208301376000918101602001919091529392505050565b60006001600160401b0382111562000780576200078062000679565b5060051b60200190565b600082601f8301126200079c57600080fd5b81356020620007b5620007af8362000764565b620006bb565b82815260059290921b84018101918181019086841115620007d557600080fd5b8286015b84811015620008195780356001600160401b03811115620007fa5760008081fd5b6200080a8986838b0101620006ee565b845250918301918301620007d9565b509695505050505050565b600082601f8301126200083657600080fd5b8135602062000849620007af8362000764565b828152600592831b85018201928282019190878511156200086957600080fd5b8387015b858110156200090f5780356001600160401b038111156200088e5760008081fd5b8801603f81018a13620008a15760008081fd5b858101356040620008b6620007af8362000764565b82815291851b8301810191888101908d841115620008d45760008081fd5b938201935b83851015620008fd57620008ed8562000602565b82529389019390890190620008d9565b8852505050938501935084016200086d565b5090979650505050505050565b600082601f8301126200092e57600080fd5b8135602062000941620007af8362000764565b82815260059290921b840181019181810190868411156200096157600080fd5b8286015b84811015620008195780356001600160401b03811115620009865760008081fd5b620009968986838b01016200078a565b84525091830191830162000965565b60006101208236031215620009b957600080fd5b620009c36200068f565b620009ce8362000602565b8152620009de6020840162000602565b60208201526040830135604082015260608301356001600160401b038082111562000a0857600080fd5b62000a1636838701620006ee565b6060840152608085013591508082111562000a3057600080fd5b62000a3e368387016200078a565b608084015260a085013591508082111562000a5857600080fd5b62000a66368387016200078a565b60a084015260c085013591508082111562000a8057600080fd5b62000a8e3683870162000824565b60c084015260e085013591508082111562000aa857600080fd5b62000ab6368387016200078a565b60e08401526101009150818501358181111562000ad257600080fd5b62000ae0368288016200091c565b8385015250505080915050919050565b6000808335601e1984360301811262000b0857600080fd5b8301803591506001600160401b0382111562000b2357600080fd5b6020019150600581901b360382131562000b3c57600080fd5b9250929050565b634e487b7160e01b600052603260045260246000fd5b6000808335601e1984360301811262000b7157600080fd5b8301803591506001600160401b0382111562000b8c57600080fd5b60200191503681900382131562000b3c57600080fd5b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6001600160a01b0385811682528416602082015260606040820181905260009062000bfa908301848662000ba2565b9695505050505050565b6000808335601e1984360301811262000c1c57600080fd5b83016020810192503590506001600160401b0381111562000c3c57600080fd5b80360383131562000b3c57600080fd5b81835260006020808501808196508560051b810191508460005b8781101562000ca257828403895262000c80828862000c04565b62000c8d86828462000ba2565b9a87019a955050509084019060010162000c66565b5091979650505050505050565b6000808335601e1984360301811262000cc757600080fd5b83016020810192503590506001600160401b0381111562000ce757600080fd5b8060051b360383131562000b3c57600080fd5b600081518084526020808501945080840160005b8381101562000d355781516001600160a01b03168752958201959082019060010162000d0e565b509495945050505050565b81835260006020808501808196506005915085821b8101856000805b8981101562000dde578484038b5262000d76838a62000caf565b80865288860181891b87018a0183865b8481101562000dc657898303601f1901845262000da4828762000c04565b62000db185828462000ba2565b958f019594505050908c019060010162000d86565b50509d8a019d96505050928701925060010162000d5c565b50919998505050505050505050565b6001600160a01b038d16815260e06020820181905260009062000e149083018d8f62000c4c565b828103604084015262000e29818c8e62000c4c565b8381036060850152898152905060208082019060058b901b8301018b60005b8c81101562000ebc57848303601f1901845262000e66828f62000caf565b8085526020850160005b8281101562000ea2576001600160a01b0362000e8c8562000602565b1682526020938401939091019060010162000e70565b506020968701969095509390930192505060010162000e48565b5050848103608086015262000ed2818b62000cfa565b9250505082810360a084015262000eeb81878962000c4c565b905082810360c084015262000f0281858762000d40565b9f9e505050505050505050505050505050565b60006020828403121562000f2857600080fd5b620005fb8262000602565b6000815160005b8181101562000f56576020818501810151868301520162000f3a565b8181111562000f66576000828601525b509290920192915050565b6000620005b962000f83838662000f33565b8462000f3356fe60806040526040516107b13803806107b183398101604081905261002291610349565b61004d60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd610417565b60008051602061076a833981519152146100695761006961043c565b6100758282600061007c565b50506104a1565b610085836100b2565b6000825111806100925750805b156100ad576100ab83836100f260201b6100291760201c565b505b505050565b6100bb8161011e565b6040516001600160a01b038216907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b90600090a250565b6060610117838360405180606001604052806027815260200161078a602791396101de565b9392505050565b610131816102bc60201b6100551760201c565b6101985760405162461bcd60e51b815260206004820152602d60248201527f455243313936373a206e657720696d706c656d656e746174696f6e206973206e60448201526c1bdd08184818dbdb9d1c9858dd609a1b60648201526084015b60405180910390fd5b806101bd60008051602061076a83398151915260001b6102cb60201b6100641760201c565b80546001600160a01b0319166001600160a01b039290921691909117905550565b60606001600160a01b0384163b6102465760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b606482015260840161018f565b600080856001600160a01b0316856040516102619190610452565b600060405180830381855af49150503d806000811461029c576040519150601f19603f3d011682016040523d82523d6000602084013e6102a1565b606091505b5090925090506102b28282866102ce565b9695505050505050565b6001600160a01b03163b151590565b90565b606083156102dd575081610117565b8251156102ed5782518084602001fd5b8160405162461bcd60e51b815260040161018f919061046e565b634e487b7160e01b600052604160045260246000fd5b60005b83811015610338578181015183820152602001610320565b838111156100ab5750506000910152565b6000806040838503121561035c57600080fd5b82516001600160a01b038116811461037357600080fd5b60208401519092506001600160401b038082111561039057600080fd5b818501915085601f8301126103a457600080fd5b8151818111156103b6576103b6610307565b604051601f8201601f19908116603f011681019083821181831017156103de576103de610307565b816040528281528860208487010111156103f757600080fd5b61040883602083016020880161031d565b80955050505050509250929050565b60008282101561043757634e487b7160e01b600052601160045260246000fd5b500390565b634e487b7160e01b600052600160045260246000fd5b6000825161046481846020870161031d565b9190910192915050565b602081526000825180602084015261048d81604085016020870161031d565b601f01601f19169190910160400192915050565b6102ba806104b06000396000f3fe60806040523661001357610011610017565b005b6100115b610027610022610067565b61009f565b565b606061004e838360405180606001604052806027815260200161025e602791396100c3565b9392505050565b6001600160a01b03163b151590565b90565b600061009a7f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc546001600160a01b031690565b905090565b3660008037600080366000845af43d6000803e8080156100be573d6000f35b3d6000fd5b60606001600160a01b0384163b6101305760405162461bcd60e51b815260206004820152602660248201527f416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6044820152651b9d1c9858dd60d21b60648201526084015b60405180910390fd5b600080856001600160a01b03168560405161014b919061020e565b600060405180830381855af49150503d8060008114610186576040519150601f19603f3d011682016040523d82523d6000602084013e61018b565b606091505b509150915061019b8282866101a5565b9695505050505050565b606083156101b457508161004e565b8251156101c45782518084602001fd5b8160405162461bcd60e51b8152600401610127919061022a565b60005b838110156101f95781810151838201526020016101e1565b83811115610208576000848401525b50505050565b600082516102208184602087016101de565b9190910192915050565b60208152600082518060208401526102498160408501602087016101de565b601f01601f1916919091016040019291505056fe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a2646970667358221220c1396a395593415293023c3bc166734d52c4ee9136c6ff8eaef33568949ec5f064736f6c634300080d0033360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564a26469706673582212206faf0c087d2e2ee81882669c404812c2d5ea5b14bfaae671e031a8bedfb484ea64736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "createDAO(address,(address,address,bytes32,string,string[],string[],address[][],string[],string[][]))": {
        "params": {
          "createDAOParams": "Struct of all the parameters required to create a DAO",
          "creator": "Address of the Dao Creator"
        },
        "returns": {
          "accessControl": "The address of the deployed access control proxy contract",
          "dao": "The address of the deployed DAO proxy contract"
        }
      },
      "supportsInterface(bytes4)": {
        "params": {
          "interfaceId": "An interface ID bytes4 as defined by ERC-165"
        },
        "returns": {
          "_0": "bool Indicates whether the interface is supported"
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "createDAO(address,(address,address,bytes32,string,string[],string[],address[][],string[],string[][]))": {
        "notice": "Creates a DAO with an access control contract"
      },
      "supportsInterface(bytes4)": {
        "notice": "Returns whether a given interface ID is supported"
      }
    },
    "notice": "A factory contract for deploying DAOs with an access control contract",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}